# Create a Horizontal Pod Autoscaller (HPA) for the deployment of pacman
# https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/#replicaset-as-a-horizontal-pod-autoscaler-target
# https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
# https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/
# Abaixo link muito bom para fazer em modo declarativo. Mas teve de ser ajustado para a versão "V2" e a parte do CPU melhorada com o exemplo
# logo abaixo. Se tentar com V1 o "averageUtilization" do CPU dá asneira:
# https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#creating-the-autoscaler-declaratively

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pacman-hpa
  #namespace: pacman-namespace
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pacman-deployment
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 1
        type: Utilization
    type: Resource
  minReplicas: 1
  maxReplicas: 10

# Notas:
# Um dos testes que fiz, que continua a ser válido!!!! foi, para construir isto fiz um export do resultado da operação a partir do comando:
# kubectl autoscale deployment pacman-deployment --cpu-percent=1 --min=1 --max=10 -n pacman-namespace
# Para exportar a configuração do resultado do comando, usei:
# kubectl get hpa pacman-deployment -n pacman-namespace -o yaml > hpa.yaml
# Depois, eliminei "o lixo" e ficou assim :D (o que está comentado abaixo)

#apiVersion: autoscaling/v2
#kind: HorizontalPodAutoscaler
#metadata:
#  name: pacman-hpa
#  namespace: pacman-namespace
#spec:
#  maxReplicas: 10
#  metrics:
#  - resource:
#      name: cpu
#      target:
#        averageUtilization: 1
#        type: Utilization
#    type: Resource
#  minReplicas: 1
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: pacman-deployment